name: Release Extension

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check licenses
      run: npm run license-check

    - name: Get version from package.json
      id: package-version
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"

    - name: Lint code
      run: npm run lint

    - name: Compile TypeScript
      run: npm run compile

    - name: Run tests
      run: |
        xvfb-run -a npm test

    - name: Install vsce
      run: npm install -g @vscode/vsce

    - name: Package extension
      run: vsce package

    - name: Create and push tag
      run: |
        git tag "v${{ steps.package-version.outputs.version }}"
        git push origin "v${{ steps.package-version.outputs.version }}"

    - name: Create GitHub Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ steps.package-version.outputs.version }}"
        release_name: "Release v${{ steps.package-version.outputs.version }}"
        draft: false
        prerelease: false

    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fab-inspector-${{ steps.package-version.outputs.version }}.vsix
        asset_name: fab-inspector-${{ steps.package-version.outputs.version }}.vsix
        asset_content_type: application/zip
